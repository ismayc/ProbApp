shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
qf(0.999, 5, 10)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("knitr")
teenSleep <- read.csv("/shared/ismayc@ripon.edu/teenSleep.csv")
xyplot(ProportionSayingYes ~ Sleep, data=teenSleep)
library(mosaic)
install.packages(mosaic)
install.packages("mosaic")
library(mosaic)
xyplot(ProportionSayingYes ~ Sleep, data=teenSleep)
xyplot(ProportionSayingYes ~ Age, data=teenSleep)
xyplot(ProportionSayingYes ~ Sleep, data=teenSleep, type = c("p", "r"))
xyplot(ProportionSayingYes ~ Age, data=teenSleep, type = c("p", "r"))
xyplot(ProportionSayingYes ~ Age, data=teenSleep, type = c("p", "r"), ylim=c(0.5,.9),xlim=c(0,40))
xyplot(ProportionSayingYes ~ Age, data=teenSleep,
ylim=c(-0.1,1.1), xlim=c(0,40)))
teenSleep <- read.csv("/shared/ismayc@ripon.edu/teenSleep.csv")
xyplot(ProportionSayingYes ~ Age, data=teenSleep,
ylim=c(-0.1,1.1), xlim=c(0,40))
xyplot(ProportionSayingYes ~ Age, data=teenSleep, type=c("p", "r"),
ylim=c(-0.1,1.1), xlim=c(0,40))
l.model=glm(ProportionSayingYes, Age, data=teenSleep, family=binomial)
teenSleep <- read.csv("/shared/ismayc@ripon.edu/teenSleep.csv")
xyplot(ProportionSayingYes ~ Age, data=teenSleep)
l.model=glm(ProportionSayingYes ~ Age, data=teenSleep, family=binomial)
sleep.mat=matrix(c(12,34,35,79,37, 77,39,65,27,41),nrow=2,
dimnames=list(c("Less than 7 hours", "7 hours or more"),
c("14","15","16","17","18")))
sleep.mat
l.model=glm(cbind(sleep.mat[2,],sleep.mat[1,])~age, family=binomial)
age=14:18
l.model=glm(cbind(sleep.mat[2,],sleep.mat[1,])~age, family=binomial)
newage.df=data.frame(age=0:40)
# Generating predicted values using the original logistic reg based on 5 proportions
yhat=predict(l.model, newdata=newage.df,type="response")
plot(newage.df$age,yhat, pch='',type="l",ylim=c(-0.1,1.1),xlim=c(0,40),
xlab="age", ylab="Proportion Saying No")
points(age,prop.yes)
sleep.mat=matrix(c(12,34,35,79,37, 77,39,65,27,41),nrow=2,
dimnames=list(c("Less than 7 hours", "7 hours or more"),
c("14","15","16","17","18")))
sleep.mat
# Table of proportion of no's and yes's for each age
prop.tab
prop.tab=round(prop.table(sleep.mat,2),3) #age-conditional probability of yes
prop.tab=round(prop.table(sleep.mat,2),3) #age-conditional probability of yes
prop.tab
prop.yes=prop.tab[2,] # the second row of the table of proportions
plot(age,prop.yes,xlab="Age",ylab="Proportion Saying Yes",
ylim=c(0.5,.9),xlim=c(12,20))
age=14:18
l.model=glm(cbind(sleep.mat[2,],sleep.mat[1,])~age, family=binomial)
newage.df=data.frame(age=0:40)
# Generating predicted values using the original logistic reg based on 5 proportions
yhat=predict(l.model, newdata=newage.df,type="response")
plot(newage.df$age,yhat, pch='',type="l",ylim=c(-0.1,1.1),xlim=c(0,40),
xlab="age", ylab="Proportion Saying No")
points(age,prop.yes)
abline(h=1,lty=2)
abline(h=-0,lty=2)
xyplot(newage.df$age,yhat, pch='',type="l",ylim=c(-0.1,1.1),xlim=c(0,40),
xlab="age", ylab="Proportion Saying No")
xyplot
medGPA <- read.csv("\shared\ismayc@ripon.edu/MedGPA.csv")
medGPA <- read.csv("/shared/ismayc@ripon.edu/MedGPA.csv")
head(medGPA)
medGPALogitModel <- glm(Acceptance ~ GPA, data=medGPA)
medGPALogitModel
medGPALogitModel <- glm(Acceptance ~ GPA, data=medGPA, family=binomial)
medGPALogitModel
b0 <- coef(medGPALogitModel)[1]
b1 <- coef(medGPALogitModel)[2]
xyplot(Acceptance ~ GPA, data=medGPA, family=binomial)
xyplot(Acceptance ~ GPA, data=medGPA)
curve(exp(b0+b1*x)/(1+exp(b0+b1*x)),add=T)
plot(Acceptance ~ GPA, data=medGPA)
curve(exp(b0+b1*x)/(1+exp(b0+b1*x)),add=T)
plot(Acceptance ~ GPA, data=medGPA)
curve(exp(b0+b1*x)/(1+exp(b0+b1*x)))
curve(exp(b0+b1*x)/(1+exp(b0+b1*x)), add=T)
plot(Acceptance ~ GPA, data=medGPA)
curve(exp(b0+b1*x)/(1+exp(b0+b1*x)), add=T)
x <- 3.6
odds <- exp(b0+b1*x)
odds <- exp(b0+b1*x); odds
odds <- exp(b0+b1*x); odds[1]
odds <- exp(b0+b1*x); odds[[1]]
fittedPi <- odds/(1+odds); fittedPi
e^5.45
exp(5.45)
exp(5.45*0.1)
teenSleep <- read.csv("/shared/ismayc@ripon.edu/teenSleep.csv")
head(teenSleep)
plot(ProportionSayingYes ~ Age, data=teenSleep)
xyplot(ProportionSayingYes ~ Age, data=teenSleep)
xyplot(ProportionSayingYes ~ Age, data=teenSleep, type=c("p", "r"), ylim=c(-0.1,1.1), xlim=c(0,40))
medGPA <- read.csv("/shared/ismayc@ripon.edu/MedGPA.csv")
head(medGPA)
xyplot(Acceptance ~ GPA, data=medGPA)
logitModel <- glm(Acceptance ~ GPA, data=medGPA, family=binomial)
logitModel
b0 <- coef(logitModel)[[1]]; b0
b1 <- coef(logitModel)[[2]]; b1
plot(Acceptance ~ GPA, data=medGPA)
curve(exp(b0+b1*x) / (1 + exp(b0+b1*x)) , add=T)
x <- 3
odds <- exp(b0+b1*x); odds
fittedPi <- odds/(1+odds); fittedPi
teenSleep <- read.csv("/shared/ismayc@ripon.edu/teenSleep.csv")
head(teenSleep)
xyplot(log(ProportionSayingYes)/(1 - ProportionSayingYes) ~ Age, data=teenSleep)
xyplot(log(ProportionSayingYes)/(1 - ProportionSayingYes) ~ Age, data=teenSleep, type=c("p","r"))
xyplot(log(ProportionSayingYes)/(1 - ProportionSayingYes)) ~ Age, data=teenSleep, type=c("p","r"))
xyplot(log((ProportionSayingYes)/(1 - ProportionSayingYes)) ~ Age, data=teenSleep, type=c("p","r"))
empLogit <- log((teenSleep$ProportionSayingYes)/(1 - teenSleep$ProportionSayingYes))
xyplot(empLogit ~ teenSleep$Age)
xyplot(empLogit ~ teenSleep$Age, type=c("p","r"))
le <- read.csv("/shared/ismayc@ripon.edu/Leukemia.csv")
tally(Resp ~ Age)
tally(Resp ~ Age, data=le)
medGPA10 <- read.csv("/shared/ismayc@ripon.edu/MedGPA.csv")
medGPA10
medGPA10 <- read.csv("/shared/ismayc@ripon.edu/MedGPA.csv")
medGPA10$GPA10 <- medGPA10$GPA * 10
head(medGPA10)
medGPA10Logit <- glm(Acceptance ~ GPA10, data=medGPA10, family=binomial)
medGPA10Logit
medGPASim <- do(10000) * coef(glm(shuffle(Acceptance) ~ GPA10,
data=medGPA10, family=binomial))
head(medGPASim)
sampleSlope <- coef(medGPA10Logit)[[2]]
histogram(~GPA10, center=0, data=medGPASim)
pValue <- prop(~abs(GPA10) >= sampleSlope, data=medGPASim); pValue
sdSim <- sd(~GPA10, data=medGPASim)
sdSim <- sd(~GPA10, data=medGPASim)
lower <- sampleSlope - 2 * sdSim
upper <- sampleSlope + 2 * sdSim
lower <- sampleSlope - 2 * sdSim; lower
upper <- sampleSlope + 2 * sdSim; upper
data=resample(medGPA10), family=binomial))
medGPABootstrapSim <- do(10000) * coef(glm(Acceptance) ~ GPA10,
data=resample(medGPA10), family=binomial)
View(medGPABootstrapSim)
medGPABootstrapSim <- do(10000) * coef(glm((Acceptance) ~ GPA10,
data=resample(medGPA10), family=binomial))
head(medGPABootstrapSim)
histogram(~GPA10, center=sampleSlope, data=medGPABootstrapSim)
confint(medGPABootstrapSim, level=0.95, method="quantile")
data=resample(medGPA10), family=binomial))
medGPABootstrapSim <- do(10000) * coef(glm((Acceptance) ~ GPA10,
data=resample(medGPA10), family=binomial))
histogram(~GPA10, center=sampleSlope, data=medGPABootstrapSim)
confint(medGPABootstrapSim, level=0.95, method="quantile")
confint(medGPABootstrapSim, level=0.95, method="stderr")
sampleSlope
data=resample(medGPA10), family=binomial))
medGPABootstrapSim <- do(100000) * coef(glm((Acceptance) ~ GPA10,
data=resample(medGPA10), family=binomial))
head(medGPABootstrapSim)
histogram(~GPA10, center=sampleSlope, data=medGPABootstrapSim)
summary(medGPA10Logit)
confint(medGPA10Logit)
lower <- sampleLogitSlope - 2 * sdSim; lower
sampleLogitSlope <- coef(medGPA10Logit)[[2]]
sampleLogitSlope
medGPASim <- do(10000) * coef(glm(shuffle(Acceptance) ~ GPA10,
data=medGPA10, family=binomial))
head(medGPASim)
histogram(~GPA10, center=0, data=medGPASim)
pValue <- prop(~abs(GPA10) >= sampleLogitSlope, data=medGPASim); pValue
sdSim <- sd(~GPA10, data=medGPASim)
lower <- sampleLogitSlope - 2 * sdSim; lower
upper <- sampleLogitSlope + 2 * sdSim; upper
lowerOddsRatio <- exp(lower); lowerOddsRatio
upperOddsRatio <- exp(upper); upperOddsRatio
medGPA10
histogram(~GPA10, data=medGPA10)
titanic <- read.csv("/shared/ismayc@ripon.edu/Titanic.csv")
bwplot(Age ~ Survived, data=titanic)
bwplot(Survived ~ Age, data=titanic)
library(wnaetw)
calculateWUI()
install.packages("wnaetw")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
